<?php
 class GetInfo { public static function get(){ $user_info = array(); require 'browser.php'; require 'geo_ip.php'; require 'country_code.php'; $user_info['ip'] = long2ip(self::getIp()); $geo = new SxGeo(); $geo_info = $geo->getCityFull($user_info['ip']); if(empty($geo_info['country'])){ $geo_info['country'] = 'RU'; } $user_info['country'] = CountyCode::code2country($geo_info['country']); $user_info['code'] = $geo_info['country']; if(!empty($geo_info['city'])){ $user_info['city'] = $geo_info['city']; } if(!empty($geo_info['region_name'])){ $user_info['region_name'] = $geo_info['region_name']; } if(!empty($geo_info['timezone'])){ $user_info['timezone'] = $geo_info['timezone']; } $brouser = new Browser(); $user_info['browser'] = $brouser->getBrowser(); $user_info['version'] = $brouser->getVersion(); $user_info['os'] = self::getOS(); self::getUrl($user_info); unset($geo_info); unset($geo); unset($brouser); return $user_info; } public static function getMoving() { return json_decode($_POST['json_moving_data']); } public static function getOS(){ $r = $_SERVER['HTTP_USER_AGENT']; $d = array($r); $os_p = array("|Windows\sNT\s5.1|", "|Windows\sNT\s5.0|", "|Windows\s98|", "|Linux\si686|", "|Windows\sNT\s6.1|", "|Windows\sNT\s6.0|", "|os\sx|", "|Macintosh|", "|Windows\sNT\s6.2|", "|Windows\sNT\s5.2|"); $os = array("Windows XP", "Windows 2000", "Windows 98", "Linux", "Windows 7", "Windows Vista", "Mac OS", "Mac OS", "Windows 8", "Windows XP"); $count = count($os); for($j=0; $j<$count; $j++){ if(preg_match($os_p[$j], $r, $mas)){ return str_replace($mas[0], $os[$j], $mas[0]); } } } public static function getUrl(&$user_info){ $info_data = json_decode($_POST['json_info_data']); $info_data->call_last_visit = date('Y-m-d H:i:s', $info_data->call_last_visit); $user_info['visit'] = $info_data->call_visit; $user_info['last_visit'] = $info_data->call_last_visit; $text = ""; $query = ""; $q = ""; $p = ""; $r = ""; $url = "/"; $url = $info_data->call_referrer; if(stripos($url, 'yandex') !== false){ $query_argument = urldecode($url); $query_argument = strstr($query_argument, "text"); parse_str($query_argument); if ($text != ""){ $user_info['search_engine'] = "yandex.ru"; $user_info['query_value'] = $text; } }elseif(stripos($url, 'google') !== false){ $query_argument = urldecode($url); $query_argument = strstr($query_argument, "q"); parse_str($query_argument); if ($q != ""){ $user_info['search_engine'] = "google.ru"; $user_info['query_value'] = $q; } }elseif(stripos($url, 'rambler') !== false){ $query_argument = urldecode($url); $query_argument = strstr($query_argument, "query"); parse_str($query_argument); if ($query != ""){ $user_info['search_engine'] = "rambler.ru"; $user_info['query_value'] = $query; } }elseif(stripos($url, 'go.mail.ru') !== false){ $query_argument = urldecode($url); $query_argument = strstr($query_argument, "q"); parse_str($query_argument); if ($q != ""){ $user_info['search_engine'] = "go.mail.ru"; $user_info['query_value'] = $q; } }elseif(stripos($url, 'yahoo') !== false){ $query_argument = urldecode($url); $query_argument = strstr($query_argument, "p"); parse_str($query_argument); if ($p != ""){ $user_info['search_engine'] = "yahoo.com"; $user_info['query_value'] = $p; } }elseif(stripos($url, 'search.aport.ru') !== false){ $query_argument = urldecode($url); $query_argument = strstr($query_argument, "r"); parse_str($query_argument); if ($r != ""){ $user_info['search_engine'] = "aport.ru"; $user_info['query_value'] = $r; } }elseif(stripos($url, 'bing') !== false){ $query_argument = urldecode($url); $query_argument = strstr($query_argument, "q"); parse_str($query_argument); if ($q != ""){ $user_info['search_engine'] = "bing.com"; $user_info['query_value'] = $q; } }elseif(stripos($url, 'nigma') !== false){ $query_argument = urldecode($url); $query_argument = strstr($query_argument, "s"); parse_str($query_argument); if ($s != ""){ $user_info['search_engine'] = "nigma.ru"; $user_info['query_value'] = $s; } }else{ $user_info['is_finder'] = false; $user_info['referer'] = $url; } } public static function getIp(){ require_once 'ip.php'; return UserIP::getIP(); } } ?>
